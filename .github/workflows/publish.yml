name: Test, Release and Publish

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
#     # Inputs the workflow accepts.
#     inputs:
#       tag:
#         description: 'release version no.'
#         required: true
      

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Download Test Files
      run: |
        wget "https://barold.dev/uploads/ff482f_test_files.zip" -O temp.zip
        unzip temp.zip
        rm temp.zip
    - name: Test with pytest
      env:
        OSU_V1_TOKEN: ${{ secrets.OSU_V1_TOKEN }}
      run: |
        pytest

    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
  
    - name: Bump version and push tag
      id: bump
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ steps.bump.outputs.new_tag }}"
        prerelease: false
        title: "${{ steps.bump.outputs.new_tag }}"
        files: dist/*
